(()
 ((def
   map
   ((f (-> a b)) (xs ([] a)))
   ([] b)
   (match xs ((-> [] []) (-> (:: hd tl) (:: (f hd) ((map f) tl)))))
  )
  (def
   filter
   ((p (-> a Bool)) (xs ([] a)))
   ([] a)
   (match
    xs
    ((-> [] [])
     (-> (:: hd tl) (if (p hd) (:: hd ((filter p) tl)) ((filter p) tl)))
    )
   )
  )
  (def
   foldl
   ((accum (-> b (-> a b))) (init b) (xs ([] a)))
   b
   (match
    xs
    ((-> [] init) (-> (:: hd tl) (((foldl accum) ((accum init) hd)) tl)))
   )
  )
  (def
   foldr
   ((accum (-> a (-> b b))) (init b) (xs ([] a)))
   b
   (match
    xs
    ((-> [] init) (-> (:: hd tl) ((accum hd) (((foldr accum) init) tl))))
   )
  )
  (def main ((arg String)) String arg)
 )
)
